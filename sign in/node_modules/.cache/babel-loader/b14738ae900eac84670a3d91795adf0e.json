{"ast":null,"code":"var _jsxFileName = \"/home/tuquan/login/src/LoginForm.js\";\nimport React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './UserStore';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        metod: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringifly({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Login Form\", /*#__PURE__*/React.createElement(InputField, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.username ? this.state.username : '',\n      onChange: val => this.setInputValue('username', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(InputField, {\n      type: \"password\",\n      placeholder: \"password\",\n      value: this.state.password ? this.state.password : '',\n      onChange: val => this.setInputValue('password', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/tuquan/login/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doLogin","res","fetch","metod","headers","body","JSON","stringifly","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputField from './InputField'\nimport SubmitButton from './SubmitButton'\nimport UserStore from './UserStore'\n\n   class LoginForm extends React.Component {\n\n   \t\tconstructor(props){\n   \t\t\tsuper(props);\n   \t\t\tthis.state = {\n   \t\t\t\tusername : '',\n   \t\t\t\tpassword : '',\n   \t\t\t\tbuttonDisabled : false\n   \t\t\t}\n   \t\t}\n   \t\t\tsetInputValue(property,val){\n   \t\t\t\tval = val.trim();\n   \t\t\t\tif(val.length > 12){\n   \t\t\t\t\treturn;\n   \t\t\t\t}\n   \t\t\t\tthis.setState({\n   \t\t\t\t\t[property]: val\n   \t\t\t\t})\n   \t\t\t}\n   \t\t\tresetForm(){\n   \t\t\t\tthis.setState({\n   \t\t\t\t\tusername: '',\n   \t\t\t\t\tpassword:'',\n   \t\t\t\t\tbuttonDisabled: false\n\n   \t\t\t\t})\n   \t\t\t}\n   \t\t\tasync doLogin(){\n   \t\t\t\tif(!this.state.username){\n   \t\t\t\t\treturn;\n   \t\t\t\t}\n   \t\t\t\tif(!this.state.password){\n   \t\t\t\t\treturn;\n   \t\t\t}\n   \t\tthis.setState({\n   \t\t\tbuttonDisabled: true\n   \t\t})\n   \t\ttry {\n   \t\t\tlet res = await fetch('/login',{\n   \t\t\t\tmetod: 'post',\n   \t\t\t\theaders: {\n   \t\t\t\t\t'Accept' : 'application/json',\n   \t\t\t\t\t'Content-Type' : 'application/json'\n   \t\t\t\t},\n   \t\t\t\tbody: JSON.stringifly({\n   \t\t\t\t\tusername: this.state.username,\n   \t\t\t\t\tpassword: this.state.password\n   \t\t\t\t})\n   \t\t\t}\n   \t\t\t\t);\n\n   \t\t\tlet result = await res.json();\n   \t\t\tif (result && result.success){\n   \t\t\t\tUserStore.isLoggedIn =  true;\n   \t\t\t\tUserStore.username = result.username;\n   \t\t\t} \n\n   \t\t\telse if ( result && result.success ===false){\n   \t\t\t\tthis.resetForm();\n   \t\t\t\talert(result.msg);\n   \t\t\t}\n   \t\t\t}\n\n   \t\t\tcatch(e) {\n   \t\t\t\tconsole.log(e);\n   \t\t\t\tthis.resetForm();\n   \t\t\t}\n   \t\t}\n   \t\t\n        render(){\n            return (\n                <div className=\"loginForm\">\n                \tLogin Form\n                  \t<InputField \n                  \t\ttype='text'\n                  \t\tplaceholder='Username'\n                  \t\tvalue={this.state.username ? this.state.username : ''}\n                  \t\tonChange={ (val) =>this.setInputValue('username',val)}\n                  \t/>\n\n                  \t<InputField \n                  \t\ttype='password'\n                  \t\tplaceholder='password'\n                  \t\tvalue={this.state.password ? this.state.password : ''}\n                  \t\tonChange={ (val) =>this.setInputValue('password',val)}\n                  \t/>\n\n                </div>\n            );\n    }\n}\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}