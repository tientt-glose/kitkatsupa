{"ast":null,"code":"var _jsxFileName = \"/home/tuquan/login/src/App.js\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './UserStore.js';\nimport LoginForm from './LoginForm';\nimport InputField from './InputField';\nimport SubmitButtom from './SubmitButtom';\nimport './App.css';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': ' application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': ' application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Loadingggg...\"));\n    } else {\n      if (UserStore.isLoggedIn) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"app\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }, \"Welcome\", UserStore.username, /*#__PURE__*/React.createElement(\"submitButton\", {\n          text: 'Logout',\n          disabled: false,\n          onClick: () => this.doLogout(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 14\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(LoginForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      })));\n    }\n  }\n\n}\n\nexport default observer(App);","map":{"version":3,"sources":["/home/tuquan/login/src/App.js"],"names":["React","observer","UserStore","LoginForm","InputField","SubmitButtom","App","Component","componentDidMount","res","fetch","method","headers","result","json","success","loading","isLoggedIn","username","e","doLogout","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './UserStore.js';\nimport LoginForm from './LoginForm';\nimport InputField from './InputField';\nimport SubmitButtom from './SubmitButtom';\nimport './App.css';\n\n   class App extends React.Component {\n   \t\tasync componentDidMount(){\n\n   \t\t\t\ttry {\n\n   \t\t\t\t\tlet res = await fetch('/isLoggedIn',\n   \t\t\t\t\t{\n   \t\t\t\t\t\tmethod: 'post',\n   \t\t\t\t\t\theaders: {\n   \t\t\t\t\t\t\t'Accept' : ' application/json',\n   \t\t\t\t\t\t\t'Content-type' : 'application/json'\n   \t\t\t\t\t\t}\n   \t\t\t\t\t});\n\n   \t\t\t\t\tlet result = await res.json();\n\n   \t\t\t\t\tif ( result && result.success){\n   \t\t\t\t\t\tUserStore.loading = false ;\n   \t\t\t\t\t\tUserStore.isLoggedIn = true ;\n   \t\t\t\t\t\tUserStore.username = result.username;\n   \t\t\t\t\t}\n\n   \t\t\t\t\telse {\n   \t\t\t\t\t\tUserStore.loading = false ;\n   \t\t\t\t\t\tUserStore.isLoggedIn = false ;\n\n   \t\t\t\t\t}\n\n   \t\t\t\t}\n\n   \t\t\t\tcatch(e){\n   \t\t\t\t\tUserStore.loading = false;\n   \t\t\t\t\tUserStore.isLoggedIn = false;\n\n   \t\t\t\t}\n\n   \t\t}\n\n   \t\tasync doLogout(){\n\n   \t\t\t\ttry {\n\n   \t\t\t\t\tlet res = await fetch('/logout',\n   \t\t\t\t\t{\n   \t\t\t\t\t\tmethod: 'post',\n   \t\t\t\t\t\theaders: {\n   \t\t\t\t\t\t\t'Accept' : ' application/json',\n   \t\t\t\t\t\t\t'Content-type' : 'application/json'\n   \t\t\t\t\t\t}\n   \t\t\t\t\t});\n\n   \t\t\t\t\tlet result = await res.json();\n\n   \t\t\t\t\tif ( result && result.success){\n   \t\t\t\t\t\tUserStore.isLoggedIn = false;\n   \t\t\t\t\t\tUserStore.username = '';\n   \t\t\t\t\t}\n\n   \t\t\t\t}\n\n   \t\t\t\tcatch(e){\n   \t\t\t\t\tconsole.log(e)\n   \t\t\t\t}\n\n   \t\t}\n\n        render(){\n        \tif(UserStore.loading){\n        \t\treturn(\n        \t\t\t<div className='app'>\n\t        \t\t\t<div className='container'>\n\t        \t\t\t\tLoadingggg...\n\t        \t\t\t</div>\n        \t\t\t</div>\n        \t\t);\n        \t}\n        \telse{\n        \t\tif(UserStore.isLoggedIn){\n        \t\t\treturn(\n        \t\t\t<div className='app'>\n\t        \t\t\t<div className='container'>\n\t        \t\t\t\tWelcome{UserStore.username}\n\t        \t\t\t\t<submitButton\n\t        \t\t\t\t\ttext={'Logout'}\n\t        \t\t\t\t\tdisabled={false}\n\t        \t\t\t\t\tonClick={() => this.doLogout()}\n\t        \t\t\t\t\t/>\n\t        \t\t\t</div>\n        \t\t\t</div>\n        \t\t);\n        \t\t}\n\n\t            return (\n\t                <div className=\"app\">\n\t                    <div className='container'>\n\t                    \t<LoginForm/>\n\t                    </div>\n\t                </div>\n\t            );\n    \t\t\t}\n\t\t}\n\t}\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}